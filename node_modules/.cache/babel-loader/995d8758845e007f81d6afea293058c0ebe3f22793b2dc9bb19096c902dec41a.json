{"ast":null,"code":"var _jsxFileName = \"/home/maksim/src/react/wa-audio-sandbox-20/src/components/WhatsAppAudioRecorder.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WhatsAppAudioRecorder() {\n  _s();\n  const [recordings, setRecordings] = useState([]);\n  const [isRecording, setIsRecording] = useState(false);\n  const [recordingTime, setRecordingTime] = useState(0);\n  const [audioStream, setAudioStream] = useState(null);\n  const [permissionStatus, setPermissionStatus] = useState('checking');\n  const [error, setError] = useState(null);\n  const [debugInfo, setDebugInfo] = useState({});\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const timerRef = useRef(null);\n  const audioContextRef = useRef(null);\n  const analyserRef = useRef(null);\n  const dataArrayRef = useRef(null);\n  const animationRef = useRef(null);\n  const canvasRef = useRef(null);\n  const streamRef = useRef(null);\n\n  // Debug logger\n  const debugLog = (message, data = null) => {\n    console.log(`🎤 ${message}`, data);\n    setDebugInfo(prev => ({\n      ...prev,\n      [`${Date.now()}`]: {\n        message,\n        data,\n        time: new Date().toLocaleTimeString()\n      }\n    }));\n  };\n\n  // Comprehensive permission check with fallback\n  const checkAndRequestPermissions = async () => {\n    try {\n      var _testStream$getTracks;\n      debugLog('Checking microphone permissions...');\n      setPermissionStatus('checking');\n\n      // Method 1: Direct getUserMedia test\n      const testStream = await navigator.mediaDevices.getUserMedia({\n        audio: {\n          echoCancellation: true,\n          noiseSuppression: true,\n          autoGainControl: true\n        }\n      });\n      debugLog('Permission test successful', {\n        tracks: testStream.getTracks().length,\n        settings: (_testStream$getTracks = testStream.getTracks()[0]) === null || _testStream$getTracks === void 0 ? void 0 : _testStream$getTracks.getSettings()\n      });\n\n      // Clean up test stream immediately\n      testStream.getTracks().forEach(track => {\n        track.stop();\n        debugLog('Test track stopped', track.readyState);\n      });\n      setPermissionStatus('granted');\n      return true;\n    } catch (err) {\n      debugLog('Permission denied', {\n        error: err.message,\n        name: err.name\n      });\n      setPermissionStatus('denied');\n      setError(`Microphone access required: ${err.message}`);\n      return false;\n    }\n  };\n  useEffect(() => {\n    checkAndRequestPermissions();\n  }, []);\n\n  // Cleanup with extensive logging\n  const cleanup = useCallback(() => {\n    debugLog('Starting cleanup...');\n    if (timerRef.current) {\n      clearInterval(timerRef.current);\n      timerRef.current = null;\n      debugLog('Timer cleared');\n    }\n    if (animationRef.current) {\n      cancelAnimationFrame(animationRef.current);\n      animationRef.current = null;\n      debugLog('Animation frame cleared');\n    }\n    if (mediaRecorderRef.current) {\n      const state = mediaRecorderRef.current.state;\n      debugLog('MediaRecorder cleanup', {\n        state\n      });\n      if (state === 'recording') {\n        mediaRecorderRef.current.stop();\n        debugLog('MediaRecorder stopped');\n      }\n      mediaRecorderRef.current = null;\n    }\n    if (audioContextRef.current && audioContextRef.current.state !== 'closed') {\n      audioContextRef.current.close();\n      audioContextRef.current = null;\n      debugLog('AudioContext closed');\n    }\n    if (streamRef.current) {\n      streamRef.current.getTracks().forEach(track => {\n        track.stop();\n        debugLog('Stream track stopped', track.readyState);\n      });\n      streamRef.current = null;\n      setAudioStream(null);\n    }\n    setIsRecording(false);\n    setRecordingTime(0);\n    debugLog('Cleanup completed');\n  }, []);\n  useEffect(() => {\n    return cleanup;\n  }, [cleanup]);\n\n  // Enhanced timer with debug\n  useEffect(() => {\n    if (isRecording) {\n      debugLog('Starting recording timer');\n      timerRef.current = setInterval(() => {\n        setRecordingTime(prev => {\n          const newTime = prev + 1;\n          if (newTime % 5 === 0) debugLog(`Recording time: ${newTime}s`);\n          return newTime;\n        });\n      }, 1000);\n    } else {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n        timerRef.current = null;\n      }\n      setRecordingTime(0);\n    }\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, [isRecording]);\n\n  // Fixed waveform with proper canvas handling\n  const drawWaveform = useCallback(() => {\n    if (!canvasRef.current || !analyserRef.current || !isRecording) {\n      return;\n    }\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const analyser = analyserRef.current;\n    const dataArray = dataArrayRef.current;\n    const draw = () => {\n      if (!isRecording || !analyserRef.current) return;\n      animationRef.current = requestAnimationFrame(draw);\n      analyser.getByteFrequencyData(dataArray);\n\n      // Clear canvas\n      ctx.fillStyle = \"#f8f9fa\";\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      // Draw bars\n      const barWidth = canvas.width / dataArray.length * 2;\n      let x = 0;\n      for (let i = 0; i < dataArray.length; i++) {\n        const barHeight = dataArray[i] / 255 * canvas.height * 0.7;\n        const hue = i / dataArray.length * 120; // Green to blue\n        ctx.fillStyle = `hsl(${hue + 100}, 60%, 50%)`;\n        ctx.fillRect(x, canvas.height - barHeight, barWidth - 1, barHeight);\n        x += barWidth;\n      }\n    };\n    draw();\n  }, [isRecording]);\n\n  // Robust recording start with extensive error handling\n  const startRecording = async () => {\n    try {\n      var _tracks$, _tracks$2;\n      debugLog('=== STARTING RECORDING ===');\n      setError(null);\n      cleanup();\n      if (permissionStatus !== 'granted') {\n        const granted = await checkAndRequestPermissions();\n        if (!granted) return;\n      }\n\n      // Get audio stream with detailed logging\n      debugLog('Requesting audio stream...');\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: {\n          echoCancellation: true,\n          noiseSuppression: true,\n          autoGainControl: true,\n          sampleRate: 48000,\n          channelCount: 1\n        }\n      });\n      streamRef.current = stream;\n      setAudioStream(stream);\n      const tracks = stream.getTracks();\n      debugLog('Stream acquired', {\n        trackCount: tracks.length,\n        settings: (_tracks$ = tracks[0]) === null || _tracks$ === void 0 ? void 0 : _tracks$.getSettings(),\n        constraints: (_tracks$2 = tracks[0]) === null || _tracks$2 === void 0 ? void 0 : _tracks$2.getConstraints()\n      });\n\n      // Setup audio context\n      debugLog('Setting up audio context...');\n      const audioCtx = new (window.AudioContext || window.webkitAudioContext)();\n      if (audioCtx.state === 'suspended') {\n        await audioCtx.resume();\n        debugLog('AudioContext resumed');\n      }\n      const source = audioCtx.createMediaStreamSource(stream);\n      const analyser = audioCtx.createAnalyser();\n      analyser.fftSize = 256;\n      analyser.smoothingTimeConstant = 0.3;\n      source.connect(analyser);\n      audioContextRef.current = audioCtx;\n      analyserRef.current = analyser;\n      dataArrayRef.current = new Uint8Array(analyser.frequencyBinCount);\n\n      // Test supported formats with detailed logging\n      const testFormats = ['audio/ogg; codecs=opus', 'audio/webm; codecs=opus', 'audio/webm', 'audio/ogg', 'audio/mp4', 'audio/wav'];\n      let selectedFormat = null;\n      for (const format of testFormats) {\n        if (MediaRecorder.isTypeSupported(format)) {\n          selectedFormat = format;\n          debugLog('Format supported', format);\n          break;\n        } else {\n          debugLog('Format not supported', format);\n        }\n      }\n      if (!selectedFormat) {\n        throw new Error('No supported audio format found');\n      }\n      debugLog('Creating MediaRecorder...', {\n        format: selectedFormat\n      });\n\n      // Create MediaRecorder with comprehensive event handling\n      const mediaRecorder = new MediaRecorder(stream, {\n        mimeType: selectedFormat,\n        audioBitsPerSecond: selectedFormat.includes('opus') ? 64000 : 128000\n      });\n      mediaRecorderRef.current = mediaRecorder;\n      audioChunksRef.current = [];\n\n      // Comprehensive event handlers\n      mediaRecorder.onstart = () => {\n        debugLog('MediaRecorder started', mediaRecorder.state);\n        setIsRecording(true);\n        drawWaveform();\n      };\n      mediaRecorder.ondataavailable = event => {\n        debugLog('Data available', {\n          size: event.data.size,\n          type: event.data.type,\n          totalChunks: audioChunksRef.current.length + 1\n        });\n        if (event.data && event.data.size > 0) {\n          audioChunksRef.current.push(event.data);\n        }\n      };\n      mediaRecorder.onstop = () => {\n        debugLog('MediaRecorder stopped', {\n          chunks: audioChunksRef.current.length,\n          totalSize: audioChunksRef.current.reduce((sum, chunk) => sum + chunk.size, 0)\n        });\n        if (audioChunksRef.current.length > 0) {\n          const blob = new Blob(audioChunksRef.current, {\n            type: selectedFormat\n          });\n          debugLog('Final blob created', {\n            size: blob.size,\n            type: blob.type\n          });\n          if (blob.size > 0) {\n            createRecording(blob, selectedFormat);\n          } else {\n            setError('Recording produced empty file');\n          }\n        } else {\n          setError('No audio data captured during recording');\n        }\n        audioChunksRef.current = [];\n      };\n      mediaRecorder.onerror = event => {\n        var _event$error;\n        debugLog('MediaRecorder error', event.error);\n        setError(`Recording failed: ${((_event$error = event.error) === null || _event$error === void 0 ? void 0 : _event$error.message) || 'Unknown error'}`);\n        cleanup();\n      };\n\n      // Start recording with frequent data collection\n      debugLog('Starting MediaRecorder...');\n      mediaRecorder.start(100); // Collect data every 100ms for better reliability\n    } catch (err) {\n      debugLog('Recording start failed', {\n        error: err.message,\n        stack: err.stack\n      });\n      setError(`Failed to start recording: ${err.message}`);\n      cleanup();\n    }\n  };\n  const stopRecording = () => {\n    debugLog('=== STOPPING RECORDING ===');\n    if (mediaRecorderRef.current && mediaRecorderRef.current.state === 'recording') {\n      mediaRecorderRef.current.stop();\n      debugLog('Stop command sent to MediaRecorder');\n    } else {\n      var _mediaRecorderRef$cur;\n      debugLog('MediaRecorder not in recording state', ((_mediaRecorderRef$cur = mediaRecorderRef.current) === null || _mediaRecorderRef$cur === void 0 ? void 0 : _mediaRecorderRef$cur.state) || 'no recorder');\n    }\n    setIsRecording(false);\n\n    // Delayed cleanup to ensure onstop fires\n    setTimeout(() => {\n      var _mediaRecorderRef$cur2;\n      if (((_mediaRecorderRef$cur2 = mediaRecorderRef.current) === null || _mediaRecorderRef$cur2 === void 0 ? void 0 : _mediaRecorderRef$cur2.state) === 'recording') {\n        debugLog('Force stopping MediaRecorder after timeout');\n        cleanup();\n      }\n    }, 2000);\n  };\n  const createRecording = (blob, mimeType) => {\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-').slice(0, -5);\n    const extension = mimeType.includes('ogg') ? 'ogg' : mimeType.includes('webm') ? 'webm' : 'audio';\n    const filename = `voice-${timestamp}.${extension}`;\n    const url = URL.createObjectURL(blob);\n\n    // Auto-download functionality\n    const downloadLink = document.createElement('a');\n    downloadLink.href = url;\n    downloadLink.download = filename;\n    downloadLink.style.display = 'none';\n    document.body.appendChild(downloadLink);\n    const recording = {\n      id: Date.now(),\n      url,\n      blob,\n      filename,\n      duration: recordingTime,\n      timestamp: new Date().toLocaleTimeString(),\n      size: blob.size,\n      mimeType,\n      downloadLink\n    };\n    setRecordings(prev => [...prev, recording]);\n    debugLog('Recording created', recording);\n  };\n\n  // Drag and drop handlers\n  const handleDragStart = (e, recording) => {\n    e.dataTransfer.setData('DownloadURL', `${recording.mimeType}:${recording.filename}:${recording.url}`);\n    e.dataTransfer.effectAllowed = 'copy';\n  };\n  const downloadRecording = recording => {\n    recording.downloadLink.click();\n  };\n  const removeRecording = index => {\n    setRecordings(prev => {\n      const recording = prev[index];\n      URL.revokeObjectURL(recording.url);\n      if (recording.downloadLink && document.body.contains(recording.downloadLink)) {\n        document.body.removeChild(recording.downloadLink);\n      }\n      return prev.filter((_, i) => i !== index);\n    });\n  };\n  const formatFileSize = bytes => {\n    if (bytes === 0) return '0 B';\n    const k = 1024;\n    const sizes = ['B', 'KB', 'MB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(1)) + ' ' + sizes[i];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-[#ece5dd] min-h-screen p-4 space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between text-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"\\uD83C\\uDF99\\uFE0F \", permissionStatus === 'granted' ? '✅ Ready' : permissionStatus === 'denied' ? '❌ No Access' : permissionStatus === 'checking' ? '⏳ Checking...' : '❓ Unknown']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 9\n      }, this), isRecording && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-red-600 font-medium animate-pulse\",\n        children: [\"\\uD83D\\uDD34 REC \", recordingTime, \"s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\",\n      children: [error, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setError(null),\n        className: \"float-right text-red-500 hover:text-red-700 font-bold\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center space-x-2\",\n      children: !isRecording ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startRecording,\n        disabled: permissionStatus !== 'granted',\n        className: `px-4 py-2 rounded-full shadow-md transition-colors ${permissionStatus !== 'granted' ? 'bg-gray-300 text-gray-500 cursor-not-allowed' : 'bg-white border border-gray-300 hover:bg-gray-100 text-black'}`,\n        title: permissionStatus !== 'granted' ? 'Microphone access required' : 'Start recording',\n        children: \"\\uD83C\\uDF99\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopRecording,\n        className: \"bg-white border border-gray-300 hover:bg-gray-100 text-black px-4 py-2 rounded-full shadow-md relative\",\n        title: \"Stop recording\",\n        children: [\"\\u23F9\\uFE0F \", recordingTime, \"s\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"absolute -top-3 right-0 w-3 h-3 bg-red-500 rounded-full animate-ping\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 7\n    }, this), isRecording && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-3 rounded-lg shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: 400,\n        height: 60,\n        className: \"w-full border rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-xs text-gray-500 mt-1\",\n        children: [\"\\uD83C\\uDFB5 Recording... \", recordingTime, \"s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-3\",\n      children: recordings.map((rec, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        draggable: true,\n        onDragStart: e => handleDragStart(e, rec),\n        className: \"flex items-center space-x-3 bg-[#dcf8c6] p-3 rounded-xl shadow-md w-fit max-w-full cursor-move hover:shadow-lg transition-shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://www.gravatar.com/avatar?d=mp\",\n          alt: \"Avatar\",\n          className: \"w-10 h-10 rounded-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col\",\n          children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n            controls: true,\n            src: rec.url,\n            className: \"w-60\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs text-gray-500 flex justify-between mt-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [rec.duration, \"s \\u2022 \", formatFileSize(rec.size)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: rec.timestamp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => downloadRecording(rec),\n          className: \"text-green-700 hover:text-green-900 p-1\",\n          title: \"Download\",\n          children: \"\\uD83D\\uDCBE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeRecording(index),\n          className: \"text-red-700 hover:text-red-900 p-1\",\n          title: \"Delete\",\n          children: \"\\uD83D\\uDDD1\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 13\n        }, this)]\n      }, rec.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 7\n    }, this), recordings.length === 0 && !isRecording && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center text-gray-500 py-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-4xl mb-2\",\n        children: \"\\uD83C\\uDFA4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Click the microphone to start recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 9\n    }, this), Object.keys(debugInfo).length > 0 && /*#__PURE__*/_jsxDEV(\"details\", {\n      className: \"mt-8 p-3 bg-gray-100 rounded text-xs\",\n      children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n        className: \"cursor-pointer font-medium\",\n        children: [\"\\uD83D\\uDD27 Debug Log (\", Object.keys(debugInfo).length, \" entries)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2 space-y-1 max-h-40 overflow-y-auto\",\n        children: Object.entries(debugInfo).slice(-10) // Show last 10 entries\n        .map(([key, info]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-start space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-400\",\n            children: info.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-mono\",\n            children: info.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 19\n          }, this), info.data && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-blue-600\",\n            children: JSON.stringify(info.data)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 33\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 419,\n    columnNumber: 5\n  }, this);\n}\n_s(WhatsAppAudioRecorder, \"BPMFI/CSy6ALdwQEshPCgYTE0KU=\");\n_c = WhatsAppAudioRecorder;\nvar _c;\n$RefreshReg$(_c, \"WhatsAppAudioRecorder\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","jsxDEV","_jsxDEV","WhatsAppAudioRecorder","_s","recordings","setRecordings","isRecording","setIsRecording","recordingTime","setRecordingTime","audioStream","setAudioStream","permissionStatus","setPermissionStatus","error","setError","debugInfo","setDebugInfo","mediaRecorderRef","audioChunksRef","timerRef","audioContextRef","analyserRef","dataArrayRef","animationRef","canvasRef","streamRef","debugLog","message","data","console","log","prev","Date","now","time","toLocaleTimeString","checkAndRequestPermissions","_testStream$getTracks","testStream","navigator","mediaDevices","getUserMedia","audio","echoCancellation","noiseSuppression","autoGainControl","tracks","getTracks","length","settings","getSettings","forEach","track","stop","readyState","err","name","cleanup","current","clearInterval","cancelAnimationFrame","state","close","setInterval","newTime","drawWaveform","canvas","ctx","getContext","analyser","dataArray","draw","requestAnimationFrame","getByteFrequencyData","fillStyle","fillRect","width","height","barWidth","x","i","barHeight","hue","startRecording","_tracks$","_tracks$2","granted","stream","sampleRate","channelCount","trackCount","constraints","getConstraints","audioCtx","window","AudioContext","webkitAudioContext","resume","source","createMediaStreamSource","createAnalyser","fftSize","smoothingTimeConstant","connect","Uint8Array","frequencyBinCount","testFormats","selectedFormat","format","MediaRecorder","isTypeSupported","Error","mediaRecorder","mimeType","audioBitsPerSecond","includes","onstart","ondataavailable","event","size","type","totalChunks","push","onstop","chunks","totalSize","reduce","sum","chunk","blob","Blob","createRecording","onerror","_event$error","start","stack","stopRecording","_mediaRecorderRef$cur","setTimeout","_mediaRecorderRef$cur2","timestamp","toISOString","replace","slice","extension","filename","url","URL","createObjectURL","downloadLink","document","createElement","href","download","style","display","body","appendChild","recording","id","duration","handleDragStart","e","dataTransfer","setData","effectAllowed","downloadRecording","click","removeRecording","index","revokeObjectURL","contains","removeChild","filter","_","formatFileSize","bytes","k","sizes","Math","floor","parseFloat","pow","toFixed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","title","ref","map","rec","draggable","onDragStart","src","alt","controls","Object","keys","entries","key","info","JSON","stringify","_c","$RefreshReg$"],"sources":["/home/maksim/src/react/wa-audio-sandbox-20/src/components/WhatsAppAudioRecorder.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from \"react\";\n\nexport default function WhatsAppAudioRecorder() {\n  const [recordings, setRecordings] = useState([]);\n  const [isRecording, setIsRecording] = useState(false);\n  const [recordingTime, setRecordingTime] = useState(0);\n  const [audioStream, setAudioStream] = useState(null);\n  const [permissionStatus, setPermissionStatus] = useState('checking');\n  const [error, setError] = useState(null);\n  const [debugInfo, setDebugInfo] = useState({});\n  \n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const timerRef = useRef(null);\n  const audioContextRef = useRef(null);\n  const analyserRef = useRef(null);\n  const dataArrayRef = useRef(null);\n  const animationRef = useRef(null);\n  const canvasRef = useRef(null);\n  const streamRef = useRef(null);\n\n  // Debug logger\n  const debugLog = (message, data = null) => {\n    console.log(`🎤 ${message}`, data);\n    setDebugInfo(prev => ({\n      ...prev,\n      [`${Date.now()}`]: { message, data, time: new Date().toLocaleTimeString() }\n    }));\n  };\n\n  // Comprehensive permission check with fallback\n  const checkAndRequestPermissions = async () => {\n    try {\n      debugLog('Checking microphone permissions...');\n      setPermissionStatus('checking');\n      \n      // Method 1: Direct getUserMedia test\n      const testStream = await navigator.mediaDevices.getUserMedia({ \n        audio: {\n          echoCancellation: true,\n          noiseSuppression: true,\n          autoGainControl: true,\n        } \n      });\n      \n      debugLog('Permission test successful', {\n        tracks: testStream.getTracks().length,\n        settings: testStream.getTracks()[0]?.getSettings()\n      });\n      \n      // Clean up test stream immediately\n      testStream.getTracks().forEach(track => {\n        track.stop();\n        debugLog('Test track stopped', track.readyState);\n      });\n      \n      setPermissionStatus('granted');\n      return true;\n      \n    } catch (err) {\n      debugLog('Permission denied', { error: err.message, name: err.name });\n      setPermissionStatus('denied');\n      setError(`Microphone access required: ${err.message}`);\n      return false;\n    }\n  };\n\n  useEffect(() => {\n    checkAndRequestPermissions();\n  }, []);\n\n  // Cleanup with extensive logging\n  const cleanup = useCallback(() => {\n    debugLog('Starting cleanup...');\n    \n    if (timerRef.current) {\n      clearInterval(timerRef.current);\n      timerRef.current = null;\n      debugLog('Timer cleared');\n    }\n    \n    if (animationRef.current) {\n      cancelAnimationFrame(animationRef.current);\n      animationRef.current = null;\n      debugLog('Animation frame cleared');\n    }\n    \n    if (mediaRecorderRef.current) {\n      const state = mediaRecorderRef.current.state;\n      debugLog('MediaRecorder cleanup', { state });\n      \n      if (state === 'recording') {\n        mediaRecorderRef.current.stop();\n        debugLog('MediaRecorder stopped');\n      }\n      mediaRecorderRef.current = null;\n    }\n    \n    if (audioContextRef.current && audioContextRef.current.state !== 'closed') {\n      audioContextRef.current.close();\n      audioContextRef.current = null;\n      debugLog('AudioContext closed');\n    }\n    \n    if (streamRef.current) {\n      streamRef.current.getTracks().forEach(track => {\n        track.stop();\n        debugLog('Stream track stopped', track.readyState);\n      });\n      streamRef.current = null;\n      setAudioStream(null);\n    }\n    \n    setIsRecording(false);\n    setRecordingTime(0);\n    debugLog('Cleanup completed');\n  }, []);\n\n  useEffect(() => {\n    return cleanup;\n  }, [cleanup]);\n\n  // Enhanced timer with debug\n  useEffect(() => {\n    if (isRecording) {\n      debugLog('Starting recording timer');\n      timerRef.current = setInterval(() => {\n        setRecordingTime(prev => {\n          const newTime = prev + 1;\n          if (newTime % 5 === 0) debugLog(`Recording time: ${newTime}s`);\n          return newTime;\n        });\n      }, 1000);\n    } else {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n        timerRef.current = null;\n      }\n      setRecordingTime(0);\n    }\n    \n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, [isRecording]);\n\n  // Fixed waveform with proper canvas handling\n  const drawWaveform = useCallback(() => {\n    if (!canvasRef.current || !analyserRef.current || !isRecording) {\n      return;\n    }\n    \n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const analyser = analyserRef.current;\n    const dataArray = dataArrayRef.current;\n\n    const draw = () => {\n      if (!isRecording || !analyserRef.current) return;\n      \n      animationRef.current = requestAnimationFrame(draw);\n      analyser.getByteFrequencyData(dataArray);\n\n      // Clear canvas\n      ctx.fillStyle = \"#f8f9fa\";\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n      \n      // Draw bars\n      const barWidth = canvas.width / dataArray.length * 2;\n      let x = 0;\n\n      for (let i = 0; i < dataArray.length; i++) {\n        const barHeight = (dataArray[i] / 255) * canvas.height * 0.7;\n        \n        const hue = (i / dataArray.length) * 120; // Green to blue\n        ctx.fillStyle = `hsl(${hue + 100}, 60%, 50%)`;\n        ctx.fillRect(x, canvas.height - barHeight, barWidth - 1, barHeight);\n        \n        x += barWidth;\n      }\n    };\n    \n    draw();\n  }, [isRecording]);\n\n  // Robust recording start with extensive error handling\n  const startRecording = async () => {\n    try {\n      debugLog('=== STARTING RECORDING ===');\n      setError(null);\n      cleanup();\n      \n      if (permissionStatus !== 'granted') {\n        const granted = await checkAndRequestPermissions();\n        if (!granted) return;\n      }\n\n      // Get audio stream with detailed logging\n      debugLog('Requesting audio stream...');\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: {\n          echoCancellation: true,\n          noiseSuppression: true,\n          autoGainControl: true,\n          sampleRate: 48000,\n          channelCount: 1,\n        }\n      });\n      \n      streamRef.current = stream;\n      setAudioStream(stream);\n      \n      const tracks = stream.getTracks();\n      debugLog('Stream acquired', {\n        trackCount: tracks.length,\n        settings: tracks[0]?.getSettings(),\n        constraints: tracks[0]?.getConstraints()\n      });\n\n      // Setup audio context\n      debugLog('Setting up audio context...');\n      const audioCtx = new (window.AudioContext || window.webkitAudioContext)();\n      \n      if (audioCtx.state === 'suspended') {\n        await audioCtx.resume();\n        debugLog('AudioContext resumed');\n      }\n      \n      const source = audioCtx.createMediaStreamSource(stream);\n      const analyser = audioCtx.createAnalyser();\n      analyser.fftSize = 256;\n      analyser.smoothingTimeConstant = 0.3;\n      source.connect(analyser);\n      \n      audioContextRef.current = audioCtx;\n      analyserRef.current = analyser;\n      dataArrayRef.current = new Uint8Array(analyser.frequencyBinCount);\n\n      // Test supported formats with detailed logging\n      const testFormats = [\n        'audio/ogg; codecs=opus',\n        'audio/webm; codecs=opus', \n        'audio/webm',\n        'audio/ogg',\n        'audio/mp4',\n        'audio/wav'\n      ];\n      \n      let selectedFormat = null;\n      for (const format of testFormats) {\n        if (MediaRecorder.isTypeSupported(format)) {\n          selectedFormat = format;\n          debugLog('Format supported', format);\n          break;\n        } else {\n          debugLog('Format not supported', format);\n        }\n      }\n      \n      if (!selectedFormat) {\n        throw new Error('No supported audio format found');\n      }\n\n      debugLog('Creating MediaRecorder...', { format: selectedFormat });\n      \n      // Create MediaRecorder with comprehensive event handling\n      const mediaRecorder = new MediaRecorder(stream, {\n        mimeType: selectedFormat,\n        audioBitsPerSecond: selectedFormat.includes('opus') ? 64000 : 128000,\n      });\n\n      mediaRecorderRef.current = mediaRecorder;\n      audioChunksRef.current = [];\n\n      // Comprehensive event handlers\n      mediaRecorder.onstart = () => {\n        debugLog('MediaRecorder started', mediaRecorder.state);\n        setIsRecording(true);\n        drawWaveform();\n      };\n\n      mediaRecorder.ondataavailable = (event) => {\n        debugLog('Data available', { \n          size: event.data.size, \n          type: event.data.type,\n          totalChunks: audioChunksRef.current.length + 1\n        });\n        \n        if (event.data && event.data.size > 0) {\n          audioChunksRef.current.push(event.data);\n        }\n      };\n\n      mediaRecorder.onstop = () => {\n        debugLog('MediaRecorder stopped', {\n          chunks: audioChunksRef.current.length,\n          totalSize: audioChunksRef.current.reduce((sum, chunk) => sum + chunk.size, 0)\n        });\n        \n        if (audioChunksRef.current.length > 0) {\n          const blob = new Blob(audioChunksRef.current, { type: selectedFormat });\n          debugLog('Final blob created', { size: blob.size, type: blob.type });\n          \n          if (blob.size > 0) {\n            createRecording(blob, selectedFormat);\n          } else {\n            setError('Recording produced empty file');\n          }\n        } else {\n          setError('No audio data captured during recording');\n        }\n        \n        audioChunksRef.current = [];\n      };\n\n      mediaRecorder.onerror = (event) => {\n        debugLog('MediaRecorder error', event.error);\n        setError(`Recording failed: ${event.error?.message || 'Unknown error'}`);\n        cleanup();\n      };\n\n      // Start recording with frequent data collection\n      debugLog('Starting MediaRecorder...');\n      mediaRecorder.start(100); // Collect data every 100ms for better reliability\n      \n    } catch (err) {\n      debugLog('Recording start failed', { error: err.message, stack: err.stack });\n      setError(`Failed to start recording: ${err.message}`);\n      cleanup();\n    }\n  };\n\n  const stopRecording = () => {\n    debugLog('=== STOPPING RECORDING ===');\n    \n    if (mediaRecorderRef.current && mediaRecorderRef.current.state === 'recording') {\n      mediaRecorderRef.current.stop();\n      debugLog('Stop command sent to MediaRecorder');\n    } else {\n      debugLog('MediaRecorder not in recording state', \n        mediaRecorderRef.current?.state || 'no recorder');\n    }\n    \n    setIsRecording(false);\n    \n    // Delayed cleanup to ensure onstop fires\n    setTimeout(() => {\n      if (mediaRecorderRef.current?.state === 'recording') {\n        debugLog('Force stopping MediaRecorder after timeout');\n        cleanup();\n      }\n    }, 2000);\n  };\n\n  const createRecording = (blob, mimeType) => {\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-').slice(0, -5);\n    const extension = mimeType.includes('ogg') ? 'ogg' : \n                     mimeType.includes('webm') ? 'webm' : 'audio';\n    const filename = `voice-${timestamp}.${extension}`;\n    \n    const url = URL.createObjectURL(blob);\n    \n    // Auto-download functionality\n    const downloadLink = document.createElement('a');\n    downloadLink.href = url;\n    downloadLink.download = filename;\n    downloadLink.style.display = 'none';\n    document.body.appendChild(downloadLink);\n    \n    const recording = {\n      id: Date.now(),\n      url,\n      blob,\n      filename,\n      duration: recordingTime,\n      timestamp: new Date().toLocaleTimeString(),\n      size: blob.size,\n      mimeType,\n      downloadLink\n    };\n    \n    setRecordings(prev => [...prev, recording]);\n    debugLog('Recording created', recording);\n  };\n\n  // Drag and drop handlers\n  const handleDragStart = (e, recording) => {\n    e.dataTransfer.setData('DownloadURL', \n      `${recording.mimeType}:${recording.filename}:${recording.url}`);\n    e.dataTransfer.effectAllowed = 'copy';\n  };\n\n  const downloadRecording = (recording) => {\n    recording.downloadLink.click();\n  };\n\n  const removeRecording = (index) => {\n    setRecordings(prev => {\n      const recording = prev[index];\n      URL.revokeObjectURL(recording.url);\n      if (recording.downloadLink && document.body.contains(recording.downloadLink)) {\n        document.body.removeChild(recording.downloadLink);\n      }\n      return prev.filter((_, i) => i !== index);\n    });\n  };\n\n  const formatFileSize = (bytes) => {\n    if (bytes === 0) return '0 B';\n    const k = 1024;\n    const sizes = ['B', 'KB', 'MB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(1)) + ' ' + sizes[i];\n  };\n\n  return (\n    <div className=\"bg-[#ece5dd] min-h-screen p-4 space-y-4\">\n      {/* Simple status bar */}\n      <div className=\"flex items-center justify-between text-sm\">\n        <span>\n          🎙️ {permissionStatus === 'granted' ? '✅ Ready' : \n               permissionStatus === 'denied' ? '❌ No Access' : \n               permissionStatus === 'checking' ? '⏳ Checking...' : '❓ Unknown'}\n        </span>\n        {isRecording && (\n          <span className=\"text-red-600 font-medium animate-pulse\">\n            🔴 REC {recordingTime}s\n          </span>\n        )}\n      </div>\n\n      {/* Error display */}\n      {error && (\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\n          {error}\n          <button \n            onClick={() => setError(null)}\n            className=\"float-right text-red-500 hover:text-red-700 font-bold\"\n          >\n            ×\n          </button>\n        </div>\n      )}\n\n      {/* Recording controls */}\n      <div className=\"flex items-center space-x-2\">\n        {!isRecording ? (\n          <button\n            onClick={startRecording}\n            disabled={permissionStatus !== 'granted'}\n            className={`px-4 py-2 rounded-full shadow-md transition-colors ${\n              permissionStatus !== 'granted' \n                ? 'bg-gray-300 text-gray-500 cursor-not-allowed' \n                : 'bg-white border border-gray-300 hover:bg-gray-100 text-black'\n            }`}\n            title={permissionStatus !== 'granted' ? 'Microphone access required' : 'Start recording'}\n          >\n            🎙️\n          </button>\n        ) : (\n          <button\n            onClick={stopRecording}\n            className=\"bg-white border border-gray-300 hover:bg-gray-100 text-black px-4 py-2 rounded-full shadow-md relative\"\n            title=\"Stop recording\"\n          >\n            ⏹️ {recordingTime}s\n            <span className=\"absolute -top-3 right-0 w-3 h-3 bg-red-500 rounded-full animate-ping\" />\n          </button>\n        )}\n      </div>\n\n      {/* Waveform visualization */}\n      {isRecording && (\n        <div className=\"bg-white p-3 rounded-lg shadow\">\n          <canvas\n            ref={canvasRef}\n            width={400}\n            height={60}\n            className=\"w-full border rounded\"\n          />\n          <div className=\"text-center text-xs text-gray-500 mt-1\">\n            🎵 Recording... {recordingTime}s\n          </div>\n        </div>\n      )}\n\n      {/* WhatsApp-style message list */}\n      <div className=\"space-y-3\">\n        {recordings.map((rec, index) => (\n          <div\n            key={rec.id}\n            draggable\n            onDragStart={(e) => handleDragStart(e, rec)}\n            className=\"flex items-center space-x-3 bg-[#dcf8c6] p-3 rounded-xl shadow-md w-fit max-w-full cursor-move hover:shadow-lg transition-shadow\"\n          >\n            <img\n              src=\"https://www.gravatar.com/avatar?d=mp\"\n              alt=\"Avatar\"\n              className=\"w-10 h-10 rounded-full\"\n            />\n            <div className=\"flex flex-col\">\n              <audio controls src={rec.url} className=\"w-60\" />\n              <div className=\"text-xs text-gray-500 flex justify-between mt-1\">\n                <span>{rec.duration}s • {formatFileSize(rec.size)}</span>\n                <span>{rec.timestamp}</span>\n              </div>\n            </div>\n            <button\n              onClick={() => downloadRecording(rec)}\n              className=\"text-green-700 hover:text-green-900 p-1\"\n              title=\"Download\"\n            >\n              💾\n            </button>\n            <button\n              onClick={() => removeRecording(index)}\n              className=\"text-red-700 hover:text-red-900 p-1\"\n              title=\"Delete\"\n            >\n              🗑️\n            </button>\n          </div>\n        ))}\n      </div>\n\n      {recordings.length === 0 && !isRecording && (\n        <div className=\"text-center text-gray-500 py-8\">\n          <div className=\"text-4xl mb-2\">🎤</div>\n          <p>Click the microphone to start recording</p>\n        </div>\n      )}\n\n      {/* Debug panel (toggle-able) */}\n      {Object.keys(debugInfo).length > 0 && (\n        <details className=\"mt-8 p-3 bg-gray-100 rounded text-xs\">\n          <summary className=\"cursor-pointer font-medium\">🔧 Debug Log ({Object.keys(debugInfo).length} entries)</summary>\n          <div className=\"mt-2 space-y-1 max-h-40 overflow-y-auto\">\n            {Object.entries(debugInfo)\n              .slice(-10) // Show last 10 entries\n              .map(([key, info]) => (\n                <div key={key} className=\"flex items-start space-x-2\">\n                  <span className=\"text-gray-400\">{info.time}</span>\n                  <span className=\"font-mono\">{info.message}</span>\n                  {info.data && <span className=\"text-blue-600\">{JSON.stringify(info.data)}</span>}\n                </div>\n              ))}\n          </div>\n        </details>\n      )}\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}